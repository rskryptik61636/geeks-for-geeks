int arr1[] = { 2, 3, 6, 7, 9 };
int arr2[] = { 1, 4, 8, 10 };
k = 5, m = sizeof(arr1) = 5, n = sizeof(arr2) = 4

start = 0; end = n = 4
mid = start + ( end - start ) / 2  = 2
mid2 = k - mid = 3
x1 = ( mid > 0 ) ? arr1[ mid - 1 ] = 3
x2 = ( mid < n ) ? arr1[ mid ] : INT_MAX = 6
y1 = ( mid2 > 0 ) ? arr2[ mid2 - 1 ] : INT_MIN = 8
y2 = ( mid2 < n ) ? arr2[ mid2 ] : INT_MAX = 10
y1 > x2: start = mid + 1 = 3


start = 3; end = n = 4
mid = start + ( end - start ) / 2  = 3
mid2 = k - mid = 2
x1 = ( mid > 0 ) ? arr1[ mid - 1 ] = 6
x2 = ( mid < n ) ? arr1[ mid ] : INT_MAX = 7
y1 = ( mid2 > 0 ) ? arr2[ mid2 - 1 ] : INT_MIN = 4
y2 = ( mid2 < n ) ? arr2[ mid2 ] : INT_MAX = 8
x1 <= y2 && y1 <= x2: output = max( x1, y1 ) = 6; end = mid - 1 = 2
kth element = 6